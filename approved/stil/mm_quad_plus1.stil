// ***************************************************************************
// GENERATED:
//   Time:    03-May-2019 11:29AM
//   By:      Stephen McGinty
//   Mode:    debug
//   Command: origen g multi_vector_plus1 -t dut.rb -e stil.rb
// ***************************************************************************
// ENVIRONMENT:
//   Application
//     Source:    git@github.com:Origen-SDK/origen_testers.git
//     Version:   0.20.0
//     Branch:    stil_based_tester(3f6473c1e05) (+local edits)
//   Origen
//     Source:    https://github.com/Origen-SDK/origen
//     Version:   0.43.0
//   Plugins
//     atp:                      1.1.3
//     origen_arm_debug:         0.4.3
//     origen_doc_helpers:       0.8.0
//     origen_jtag:              0.21.0
//     origen_swd:               1.1.1
// ***************************************************************************
STIL 1.0;                                                                                       
                                                                                                
Signals {                                                                                       
  tclk InOut;                                                                                   
  tdi InOut;                                                                                    
  tdo InOut;                                                                                    
  tms InOut;                                                                                    
}                                                                                               
                                                                                                
SignalGroups {                                                                                  
  "ALL" = 'tclk+tdi+tdo+tms';                                                                   
}                                                                                               
                                                                                                
Timing t_mm_quad_plus1 {                                                                        
  WaveformTable Waveset1 {                                                                      
    Period '40ns';                                                                              
    Waveforms {                                                                                 
      tclk { 01 { }}                                                                            
      tclk { LHX { }}                                                                           
      tdi { 01 { }}                                                                             
      tdi { LHX { }}                                                                            
      tdo { 01 { }}                                                                             
      tdo { LHX { }}                                                                            
      tms { 01 { }}                                                                             
      tms { LHX { }}                                                                            
    }                                                                                           
  }                                                                                             
                                                                                                
  WaveformTable Waveset2 {                                                                      
    Period '80ns';                                                                              
    Waveforms {                                                                                 
      tclk { 01 { }}                                                                            
      tclk { LHX { }}                                                                           
      tdi { 01 { }}                                                                             
      tdi { LHX { }}                                                                            
      tdo { 01 { }}                                                                             
      tdo { LHX { }}                                                                            
      tms { 01 { }}                                                                             
      tms { LHX { }}                                                                            
    }                                                                                           
  }                                                                                             
}                                                                                               
                                                                                                
PatternBurst b_mm_quad_plus1 {                                                                  
  PatList { mm_quad_plus1; }                                                                    
}                                                                                               
                                                                                                
PatternExec e_mm_quad_plus1 {                                                                   
  Timing t_mm_quad_plus1;                                                                       
  PatternBurst b_mm_quad_plus1;                                                                 
}                                                                                               
                                                                                                
Pattern "mm_quad_plus1" {                                                                       
mm_quad_plus1:                                                                                  
W Waveset1;                                                                                     
Ann {*// ######################################################################*}
Ann {*// ## $tester.cycle(repeat: 128)*}
Ann {*// ######################################################################*}
  V { "ALL" = XXXX; }
  V { "ALL" = XXXX; }
  V { "ALL" = XXXX; }
Loop 32 {
  V { "ALL" = XXXX; }
}
Ann {*// ######################################################################*}
Ann {*// ## 64.times do*}
Ann {*// ##   $dut.pin(:tclk).drive!(0)*}
Ann {*// ##   $dut.pin(:tclk).drive!(1)*}
Ann {*// ## end*}
Ann {*// ######################################################################*}
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
Loop 32 {
  V { "ALL" = 1XXX; }
}
Ann {*// ######################################################################*}
Ann {*// ## 64.times do*}
Ann {*// ##   $dut.pin(:tclk).drive!(0)*}
Ann {*// ##   $dut.pin(:tclk).drive!(0)*}
Ann {*// ##   $dut.pin(:tclk).drive!(1)*}
Ann {*// ##   $dut.pin(:tclk).drive!(1)*}
Ann {*// ## end*}
Ann {*// ######################################################################*}
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
Loop 64 {
  V { "ALL" = 1XXX; }
}
Ann {*// ######################################################################*}
Ann {*// ## 64.times do*}
Ann {*// ##   $dut.pin(:tclk).drive!(0)*}
Ann {*// ##   $dut.pin(:tclk).drive!(0)*}
Ann {*// ##   $dut.pin(:tclk).drive!(0)*}
Ann {*// ##   $dut.pin(:tclk).drive!(0)*}
Ann {*// ##   $dut.pin(:tclk).drive!(1)*}
Ann {*// ##   $dut.pin(:tclk).drive!(1)*}
Ann {*// ##   $dut.pin(:tclk).drive!(1)*}
Ann {*// ##   $dut.pin(:tclk).drive!(1)*}
Ann {*// ## end*}
Ann {*// ######################################################################*}
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 1XXX; }
Ann {*// ######################################################################*}
Ann {*// ## Test of period levelling*}
Ann {*// ######################################################################*}
  V { "ALL" = 0XXX; }
  V { "ALL" = 1XXX; }
  V { "ALL" = 0XXX; }
Loop 4 {
  V { "ALL" = 1XXX; }
}
W Waveset2;                                                                                     
  V { "ALL" = 0XXX; }Ann {*// Period levelled (nvmbist_readout)*}
  V { "ALL" = 0XXX; }Ann {*// Period levelled (nvmbist_readout)*}
  V { "ALL" = 1XXX; }Ann {*// Period levelled (nvmbist_readout)*}
Loop 8 {
  V { "ALL" = 1XXX; }Ann {*// Period levelled (nvmbist_readout)*}
}
W Waveset0;                                                                                     
Ann {*// ######################################################################*}
Ann {*// ## Test that these collapse to correct multiple repeats*}
Ann {*// ######################################################################*}
Ann {*// Wait for 12.0ms*}
  V { "ALL" = 11XX; }
  V { "ALL" = 11XX; }
  V { "ALL" = 11XX; }
Loop 65535 {
  V { "ALL" = 11XX; }
}
  V { "ALL" = 11XX; }
  V { "ALL" = 11XX; }
  V { "ALL" = 11XX; }
Loop 9465 {
  V { "ALL" = 11XX; }
}
Ann {*// ######################################################################*}
Ann {*// ## Verify that comments at the end of the pattern work OK*}
Ann {*// ######################################################################*}
Ann {*// Wait for 48.0us*}
  V { "ALL" = 10XX; }
  V { "ALL" = 10XX; }
  V { "ALL" = 10XX; }
Loop 300 {
  V { "ALL" = 10XX; }
}
Ann {*// This comment should appear after the delay 1200*}
  V { "ALL" = 10XX; }
  V { "ALL" = 10XX; }
  V { "ALL" = 10XX; }
  V { "ALL" = 10XX; }
Ann {*// ######################################################################*}
Ann {*// ## Pattern complete*}
Ann {*// ######################################################################*}
  V { "ALL" = 10XX; }
  V { "ALL" = 10XX; }
  V { "ALL" = 10XX; }
  V { "ALL" = 10XX; }
Stop;                                                                                           
}                                                                                               
